# Exerc√≠cio de Casa üè† 

## Introdu√ß√£o √† Web e API

Pesquise sobre os n√≠veis de maturidade de Richardson e responda:
1) qual n√≠vel de maturidade corresponde ao CRUD (Create, Read, Update, Delete)?
O CRUD pressup√µe uma aplicabilidade correta dos verbos HTTP (GET/POST/PUT/DELETE), no nivelamento de maturidade de Richardson ele afirma a utiliza√ß√£o sem√¢ntica correta dos verbos acontece a partir do n√≠vel 2, portanto n√≠vel correspondente ao CRUD. 

2) qual a rela√ß√£o entre os m√©todos HTTP e o CRUD?
O CRUD est√° diretamente relacionado aos verbos/m√©todos que norteiam o protocolo HTTP, assim GET, POST, PUT e DELETE se referem √†s a√ß√µes do CRUD, de criar(create), ler(read), atualizar(update) e apagar(delete) os dados e informa√ß√µes.

3) o que √© HATEOAS? Ele √© obrigat√≥rio para que uma API seja considerada RESTful?
HATEOAS e uma interliga√ß√£o entre os caminhos dos recursos, ou seja, as URN apresentam os links para os recursos e estes apresentam o link inverso, de retorno para a URN em que ele est√° localizado. O HATEOAS otimiza o consumo de APIs com seus hiperlinks, entretanto n√£o √© obrigat√≥rio para que uma API seja considerada RESTful, j√° a aplica√ß√£o dos princ√≠pios REST, sim.

4) O que quer dizer quando dizemos que uma API √© idempotente?
De acordo com o MDN (https://developer.mozilla.org/pt-BR/docs/Glossary/Idempotent) a idempotencia esta relacionada a integridade do estado do servidor, ou seja, quantas vezes seja chamado um metodo, tantas vezes o servidor retornara a mesma respota. Assim, todos os verbos HTTP seguros s√£o considerados idempotentes (GET, HEAD, OPTIONS) e al√©m deles os verbos PUT e DELETE tamb√©m s√£o idempotentes, isso porque mesmo ap√≥s uma chamada deles o servidor vai retornar respostas iguais √†s solicita√ß√µes subsequentes.

5) Qual a diferen√ßa entre os m√©todos PUT e PATCH?
O m√©todo PUT substitui, fazendo uma altera√ß√£o completa nos dados do recurso (ou cria, caso n√£o exista, no entanto √© mais recomendado utilizar o m√©todo POST para isso), o PATCH faz uma altera√ß√£o parcial nos dados do recurso.



6) Do arquivo filmes.js retorne no terminal o Titulo, Ano e Genero. (desafio: apresente cada Genero em linhas separadas)
7) Do arquivo colors-rgb retorne no terminal o RGB como no exemplo: "aliceblue RGB: 240, 248, 255, 1"
8) Do arquivo estados-cidade dado uma sigla retorne no terminal o lista de cidades